apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "proxy2.fullname" . }}
  labels:
{{ include "proxy2.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "proxy2.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "proxy2.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - image: {{ .Values.proxy.image }}
          name: proxy-{{ include "proxy2.name" . }}
          volumeMounts:
            - name: {{ include "proxy2.name" . }}-config-volume
              mountPath: /etc/nginx/conf.d
            - name: {{ include "proxy2.name" . }}-shared-volume
              mountPath: /static
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
        - image: {{ .Values.application.image }}
          name: app-{{ include "proxy2.name" . }}
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
          env:
          - name: BUCKET_NAME
            value: {{ .Values.application.bucket }}
          volumeMounts:
          - name: {{ include "proxy2.name" . }}-shared-volume
            mountPath: /var/static/
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "mkdir -p /var/static/ && cp -r /static/ /var/static/"]

      volumes:
        - name: {{ include "proxy2.name" . }}-shared-volume
          emptyDir: {}

        - name: {{ include "proxy2.name" . }}-config-volume
          configMap:
            name: {{ include "proxy2.name" . }}
